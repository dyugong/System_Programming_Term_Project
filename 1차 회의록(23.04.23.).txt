ls
man
vi
gdb
valgrind
who             utmp 사용   
cp
error handling
buffering
directory reading
special bit
modifying directory properties
pwd
mount
turn off kernel buffering
stty command
// signal handling
time handling
alarm
IPC
event handling


1. chatting program
2. 나만의 shell
3. wget
4. rdb접속 interative shell
5. secure parsing
6. 유틸리티 프로그램(흔히 불러다 쓰는 프로그램) ex) top 같은 프로그램(현재 OS상태를 보여줌) ->누가, cpu resource를 사용했나 ->process monitoring(보여줌)
7. code cp, vi같은 text editor(그래픽 넣어서 fancy)
8. spell check(중복)
9. email, kakaotalk -> remote chat program
10. scheduler, diary 괜찮대요
11. strace(어떤 system call이 invoke 되었는지 가시화)
12. mpi(mpi call의 call graph를 보여줌) -> 어디서 특정 func call이 time을 많이 소비하고 있는지 (size랑, sorting해서 랭킹 보여줌)
13. bottleneck

새로운 라이브러리도 써보고, 디버깅도 해보고, external library 호출은 다른 코드도 가능하지만 C가 standard
shell script기반의 submission 허용 안 함
github repository