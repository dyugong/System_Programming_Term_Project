#include <sys/ptrace.h>

//함수 형태
long ptrace(enum __ptrace_request request, pid_t pid, void *addr, void *data);

//그냥 참고만 (GPT)
ptrace 함수는 다음과 같이 4개의 인자를 받습니다:

1. pid (Process ID): ptrace가 연결될 대상 프로세스의 ID입니다.
2. addr (Address): ptrace로 접근하려는 메모리 영역의 시작 주소입니다.
3. data: ptrace로 쓰거나 읽을 데이터입니다.
4. request: ptrace가 수행할 작업을 지정하는 옵션입니다.

각 인자의 역할은 다음과 같습니다:

1. pid: ptrace 함수로 연결하려는 프로세스의 ID를 지정합니다. ptrace 함수는 이 프로세스와 통신하며 해당 프로세스를 제어할 수 있습니다.
2. addr: ptrace 함수에서 접근하려는 메모리 영역의 시작 주소를 지정합니다. 이 주소부터 데이터를 읽거나 쓸 수 있습니다. 
3. data: ptrace 함수에서 읽거나 쓸 데이터를 지정합니다. 데이터의 크기와 형식은 request 옵션에 따라 달라집니다.
4. request: ptrace 함수에서 수행할 작업을 지정합니다. request 옵션은 ptrace 함수에서 사용되는 명령어와 매핑되며, 프로세스 제어, 메모리 읽기/쓰기, 레지스터 값 읽기/쓰기 등 다양한 기능을 제공합니다.

---------------------------------------------------------------------------------------------------------------------------------------

ptrace 함수는 위의 인자들을 통해 프로세스의 메모리와 레지스터 등을 읽고 쓰거나, 시스템 콜을 추적하는 등 프로세스를 다양한 방식으로 제어할 수 있습니다. 하지만, 이러한 기능은 보안 취약점을 악용할 수 있는 가능성이 있으므로, 권한 없이 실행할 경우 보안상 위험할 수 있습니다.

ptrace 함수를 호출할 때 사용하는 옵션은 다음과 같습니다.

- PTRACE_TRACEME : 현재 프로세스를 추적 대상으로 설정합니다. 자신의 프로세스를 추적하게 됩니다.
- PTRACE_PEEKTEXT : 추적 중인 프로세스의 메모리 공간에서 특정 주소의 값을 읽어옵니다. 해당 주소에 있는 명령어를 읽어올 때 사용됩니다.
- PTRACE_PEEKDATA : 추적 중인 프로세스의 메모리 공간에서 특정 주소의 값을 읽어옵니다. 해당 주소에 있는 데이터 값을 읽어올 때 사용됩니다.
- PTRACE_POKETEXT : 추적 중인 프로세스의 메모리 공간에서 특정 주소에 값을 씁니다. 해당 주소에 있는 명령어 값을 변경할 때 사용됩니다.
- PTRACE_POKEDATA : 추적 중인 프로세스의 메모리 공간에서 특정 주소에 값을 씁니다. 해당 주소에 있는 데이터 값을 변경할 때 사용됩니다.
- PTRACE_CONT : 추적 중인 프로세스를 계속 실행합니다.
- PTRACE_SYSCALL : 다음 시스템 콜 진입 시점에서 멈추도록 설정합니다.
- PTRACE_KILL : 추적 중인 프로세스를 종료합니다.
- PTRACE_GETREGS : 추적 중인 프로세스의 레지스터 값을 읽어옵니다.
- PTRACE_SETREGS : 추적 중인 프로세스의 레지스터 값을 변경합니다.
- PTRACE_GETSIGINFO : 추적 중인 프로세스에 대한 시그널 정보를 읽어옵니다.
- PTRACE_SETSIGINFO : 추적 중인 프로세스에 대한 시그널 정보를 변경합니다.

위의 옵션들은 ptrace 함수의 세 번째 인자에 사용됩니다. 세 번째 인자에는 어떤 동작을 수행할 것인지에 대한 값을 전달합니다. 예를 들어, PTRACE_PEEKTEXT 옵션을 사용할 때는 세 번째 인자로 읽어올 메모리 주소를 전달합니다. PTRACE_SYSCALL 옵션을 사용할 때는 다음 시스템 콜이 호출될 때까지 멈춰야 하므로 세 번째 인자에는 0을 전달합니다.
---------------------------------------------------------------------------------------------------------------------------------------
`ptrace` 함수를 사용할 때 다양한 옵션을 지정할 수 있습니다. `ptrace` 함수의 세 번째 인자로 사용되며, 해당 옵션에 따라 함수의 동작이 달라집니다. 아래는 `ptrace` 함수에서 사용되는 옵션의 일부입니다.

- `PTRACE_ATTACH`: 대상 프로세스에 첨부됩니다. 이 옵션을 사용하면 대상 프로세스가 멈추고 디버거는 대상 프로세스를 제어할 수 있습니다.

- `PTRACE_DETACH`: 대상 프로세스와의 연결을 끊습니다. 이 옵션을 사용하면 대상 프로세스가 다시 실행됩니다.

- `PTRACE_PEEKDATA`: 대상 프로세스의 메모리를 읽습니다.

- `PTRACE_POKEDATA`: 대상 프로세스의 메모리에 값을 쓰기 위해 사용됩니다.

- `PTRACE_GETREGS`: 대상 프로세스의 레지스터 값을 가져옵니다.

- `PTRACE_SETREGS`: 대상 프로세스의 레지스터 값을 설정합니다.

- `PTRACE_CONT`: 이전에 멈춘 프로세스를 계속 실행합니다.

- `PTRACE_SYSCALL`: 다음 시스템 호출 진입 시점까지 대상 프로세스를 실행합니다.

위의 옵션들은 `ptrace` 함수에서 주로 사용되는 옵션들입니다. 그 밖에도 다양한 옵션이 있으며, 사용하려는 용도에 맞게 선택하면 됩니다.
