인자로 자식프로세스의 pid, rusage구조체의 주소를 받아, 해당 프로세스의 자원 사용량을 rusage에 저장하는 함수.
waitpid를 사용하여 자식 프로세스의 자원 사용량을 구하려 했으나, invalid argument 오류가 계속 나옴.
첫번째 인자를 pid가 아닌, RUSAGE_CHILDREN 매크로를 사용하였더니, 오류를 출력하지 않고 실행됨.
만약 반복을 돌았을 때, RUSAGE_CHILDREN이 모든 자식 프로세스에 대한 것인지, 각 커맨드에 대한 자식 프로세스에 대한 것인지 알아볼 필요가 있음.

#include <sys/time.h>
#include <sys/resource.h>

int getrusage(int who, struct rusage *usage);

RUSAGE_SELF
호출 프로세스의 자원 사용 통계를 반환한다. 프로세스 내 모든 스레드의 자원 사용 합계이다.
RUSAGE_CHILDREN
종료돼서 대기까지 이뤄진 호출 프로세스의 자식 모두에 대한 자원 사용 통계를 반환한다. 사이의 프로세스들이 모두 종료된 자식에 대기를 했으면 자식 아래 후손들이 쓴 자원까지 이 통계에 포함된다.
RUSAGE_THREAD
호출 스레드의 자원 사용 통계를 반환한다. <sys/resource.h>에서 이 상수 정의를 얻으려면 (어떤 헤더도 포함시키기 전에) _GNU_SOURCE 기능 확인 매크로가 정의돼 있어야 한다.


struct rusage {
    struct timeval ru_utime; /* 사용한 사용자 CPU 시간 */
    struct timeval ru_stime; /* 사용한 시스템 CPU 시간 */
    long   ru_maxrss;        /* 최대 상주 집합 크기 */
    long   ru_ixrss;         /* 필수 공유 메모리 크기 */
    long   ru_idrss;         /* 필수 비공유 데이터 크기 */
    long   ru_isrss;         /* 필수 비공유 스택 크기 */
    long   ru_minflt;        /* 페이지 재활용 (연성 페이지 폴트) 횟수 */
    long   ru_majflt;        /* 페이지 폴트 (경성 페이지 폴트) 횟수 */
    long   ru_nswap;         /* 스왑 */
    long   ru_inblock;       /* 블록 입력 동작 횟수 */
    long   ru_oublock;       /* 블록 출력 동작 횟수 */
    long   ru_msgsnd;        /* IPC 메시지 전송 횟수 */
    long   ru_msgrcv;        /* IPC 메시지 수신 횟수 */
    long   ru_nsignals;      /* 시그널 수신 횟수 */
    long   ru_nvcsw;         /* 자발적 문맥 전환 횟수 */
    long   ru_nivcsw;        /* 비자발적 문맥 전환 횟수 */
};

ru_utime
사용자 모드에서 실행하며 보낸 시간의 총량을 timeval 구조체로 (초와 마이크로초로) 표현한 것이다.
ru_stime
커널 모드에서 실행하며 보낸 시간의 총량을 timeval 구조체로 (초와 마이크로초로) 표현한 것이다.
ru_maxrss (리눅스 2.6.32부터)
최대로 사용한 상주 집합 (킬로바이트 단위) 크기이다. RUSAGE_CHILDREN인 경우 프로세스 트리에서 가장 큰 상주 집합 크기가 아니라 자식들 중 최대 상주 집합 크기이다.
ru_minflt
I/O 활동 없이 처리한 페이지 폴트 수. 재할당 대기 페이지 목록의 페이지 프레임을 "재활용"해서 I/O 활동을 피한다.
ru_majflt
I/O 활동이 필요했던 처리 페이지 폴트 수.
ru_inblock
파일 시스템에서 입력을 수행해야 했던 횟수.
ru_oublock
파일 시스템에서 출력을 수행해야 했던 횟수.
ru_nvcsw
타임 슬라이스가 끝나기 전에 (일반적으로 자원이 사용 가능해지기를 기다리려고) 프로세스가 자발적으로 프로세서를 포기하여 발생한 문맥 전환 횟수.
ru_nivcsw
더 높은 우선순위의 프로세스가 실행 가능해지거나 현재 프로세스가 타임 슬라이스를 초과해서 발생한 문맥 전환 횟수.
